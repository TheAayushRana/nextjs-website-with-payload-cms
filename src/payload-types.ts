/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    'contact-submissions': ContactSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'contact-submissions': ContactSubmissionsSelect<false> | ContactSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
  };
  locale: 'en' | 'es';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  /**
   * URL path (e.g., "home", "about")
   */
  slug: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Add flexible content blocks to build your page
   */
  blocks?: (HeroBlock | TestimonialsBlock | FeaturesBlock | CTASectionBlock | ContactFormBxlock)[] | null;
  meta?: {
    /**
     * SEO title for search engines
     */
    title?: string | null;
    /**
     * SEO description for search engines
     */
    description?: string | null;
    /**
     * Image for social media sharing
     */
    image?: (string | null) | Media;
  };
  status: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlock".
 */
export interface HeroBlock {
  /**
   * Main headline text
   */
  title: string;
  /**
   * Supporting text below the title
   */
  subtitle?: string | null;
  /**
   * Background image for the hero section
   */
  backgroundImage?: (string | null) | Media;
  buttons?:
    | {
        label: string;
        url: string;
        variant?: ('default' | 'secondary' | 'outline') | null;
        size?: ('sm' | 'default' | 'lg') | null;
        id?: string | null;
      }[]
    | null;
  textAlignment?: ('left' | 'center' | 'right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  /**
   * Section title (optional)
   */
  title?: string | null;
  testimonials?:
    | {
        name?: string | null;
        designation?: string | null;
        company?: string | null;
        avatar?: (string | null) | Media;
        quote?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonials';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock".
 */
export interface FeaturesBlock {
  /**
   * Section title (optional)
   */
  title?: string | null;
  features?:
    | {
        /**
         * Feature icon or image
         */
        icon?: (string | null) | Media;
        /**
         * Feature title
         */
        title: string;
        /**
         * Feature description
         */
        description: string;
        id?: string | null;
      }[]
    | null;
  /**
   * How many columns to display features in
   */
  layout?: ('grid-2' | 'grid-3' | 'grid-4') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'features';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTASectionBlock".
 */
export interface CTASectionBlock {
  /**
   * Section title (optional)
   */
  title: string;
  /**
   * Section description (optional)
   */
  description: string;
  /**
   * CTA buttons (max 2)
   */
  buttons?:
    | {
        label: string;
        url: string;
        variant?: ('default' | 'secondary' | 'outline') | null;
        size?: ('sm' | 'default' | 'lg') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Video for the section (optional)
   */
  video?: (string | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta-section';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactFormBxlock".
 */
export interface ContactFormBxlock {
  /**
   * Form section title (optional)
   */
  title?: string | null;
  /**
   * Form description or instructions (optional)
   */
  description?: string | null;
  /**
   * Text for the submit button
   */
  submitButtonText?: string | null;
  /**
   * Message shown after successful form submission
   */
  successMessage?: string | null;
  /**
   * Message shown when form submission fails
   */
  errorMessage?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contact-form';
}
/**
 * Contact form submissions from the website
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions".
 */
export interface ContactSubmission {
  id: string;
  /**
   * Full name of the person submitting the form
   */
  name: string;
  /**
   * Email address for contact
   */
  email: string;
  /**
   * Subject line of the inquiry
   */
  subject: string;
  /**
   * Full message content
   */
  message: string;
  /**
   * When the form was submitted
   */
  submittedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'contact-submissions';
        value: string | ContactSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  content?: T;
  blocks?:
    | T
    | {
        hero?: T | HeroBlockSelect<T>;
        testimonials?: T | TestimonialsBlockSelect<T>;
        features?: T | FeaturesBlockSelect<T>;
        'cta-section'?: T | CTASectionBlockSelect<T>;
        'contact-form'?: T | ContactFormBxlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlock_select".
 */
export interface HeroBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  backgroundImage?: T;
  buttons?:
    | T
    | {
        label?: T;
        url?: T;
        variant?: T;
        size?: T;
        id?: T;
      };
  textAlignment?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  title?: T;
  testimonials?:
    | T
    | {
        name?: T;
        designation?: T;
        company?: T;
        avatar?: T;
        quote?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock_select".
 */
export interface FeaturesBlockSelect<T extends boolean = true> {
  title?: T;
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  layout?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTASectionBlock_select".
 */
export interface CTASectionBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  buttons?:
    | T
    | {
        label?: T;
        url?: T;
        variant?: T;
        size?: T;
        id?: T;
      };
  video?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactFormBxlock_select".
 */
export interface ContactFormBxlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  submitButtonText?: T;
  successMessage?: T;
  errorMessage?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions_select".
 */
export interface ContactSubmissionsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  subject?: T;
  message?: T;
  submittedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  /**
   * Site logo that appears in the header
   */
  logo: string | Media;
  /**
   * Main navigation menu items
   */
  navigation?:
    | {
        /**
         * Text to display for this navigation item
         */
        label: string;
        /**
         * URL path (e.g., "/about", "/contact-us")
         */
        url: string;
        /**
         * Open link in new tab/window
         */
        openInNewTab?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Primary action button in the header
   */
  ctaButton?: {
    /**
     * Show/hide the CTA button
     */
    enabled?: boolean | null;
    /**
     * Button text
     */
    label?: string | null;
    /**
     * Button destination URL
     */
    url?: string | null;
    /**
     * Button style variant
     */
    variant?: ('default' | 'secondary' | 'outline') | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  navigation?:
    | T
    | {
        label?: T;
        url?: T;
        openInNewTab?: T;
        id?: T;
      };
  ctaButton?:
    | T
    | {
        enabled?: T;
        label?: T;
        url?: T;
        variant?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}